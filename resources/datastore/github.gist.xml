<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd" https="true">
    <meta>
        <author>Irakli Gozalishvili</author>
        <documentationURL></documentationURL>
        <sampleQuery><![CDATA[
            use "http://gozala.github.com/taskhub/resources/datastore/github.gists.xml";
            select * from github.gists where user = "gozala" and description = "metadocs"
        ]]></sampleQuery>
        <sampleQuery><![CDATA[
            use "http://gozala.github.com/taskhub/resources/datastore/github.gists.xml";
            INSERT INTO github.gists (
                user,
                token,
                name,
                content,
                isPrivate
            ) VALUES (
                "gozala",
                "{hash}",
                "test.md",
                "Attempt to create gist using [YQL](https://developer.yahoo.com/yql/).   
                Table from Irakli Gozalishvili",
                1
        )]]></sampleQuery>
    </meta>
    <bindings>
        <select itemPath="github.gist" produces="JSON">
            <inputs>
                <key id="user" type="xs:string" paramType="variable" required="true"/>
                <key id="token" type="xs:string" paramType="variable" required="false"/>
            </inputs>
            <execute><![CDATA[
                var gist, match = /file\s*(private|public)[\s\S]*?gist:\s*(\w*)[\s\S]*?<span[^>]*>(\w*)/g;
                var url = "http://gist.github.com/mine";
                var result = {};
                var data = { "login": user, "page": 1 };
                if (token) data.token = token;
                
                while (gist = match.exec(y.rest(url)
                    .header("Content-type","application/x-www-form-urlencoded")
                    .header("Accept", "text/javascript, text/json")
                    .post(encode(data))
                    .response)
                ) {
                    data.page ++;
                    result[gist[2]] = {
                        id: gist[2],
                        description: gist[3],
                        isPrivate: (gist[1] == "private")
                    };
                }
                
                response.object = result;
            ]]></execute>
        </select>
        <insert itemPath="github.gist" produces="JSON">
            <urls>
                <url>http://gist.github.com/gists/</url>
            </urls>
            <inputs>
                <key id="user" type="xs:string" paramType="variable" required="true"/>
                <key id="token" type="xs:string" paramType="variable" required="true"/>
                <key id="name" type="xs:string" paramType="variable" required="true"/>
                <key id="content" type="xs:string" paramType="variable" required="true"/>
                <key id="isPrivate" type="xs:boolean" paramType="variable" required="false"/>
                <value id="description" type="xs:string" paramType="variable" required="false"/>
            </inputs>
            <execute><![CDATA[
                var seperator = "Ëš";
                function encode(data) {
                    var message = "";
                    for (var key in data) {
                        message += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(data[key]);
                    }
                    return message.substring(1);
                }
                var data = {
                    "login": login,
                    "token": token
                }
                if (isPrivate)  data.action_button = "private";

                var names = name.split(seperator);
                var contents = contents.split(seperator);
                for (var i = 0, l = Math.min(names.length, contents.length, 10); i < l; i ++) {
                    var key = "gistfile" + i;
                    data["file_name[" + key + "]"] = names[i];
                    data["file_ext[" + key + "]"] = undefined;
                    data["file_contents[" + key + "]"] = contents[name];
                }

                var html = request
                    .header("Content-type","application/x-www-form-urlencoded")
                    .header("Accept", "text/javascript, text/json")
                    .post(encode(data))
                    .response;
                var id = /gist: (\w*) /.exec(html)[1];
                if (description) {
                    y.rest("https://gist.github.com/gists/" + id + "/update_description")
                        .header("Content-type","application/x-www-form-urlencoded")
                        .header("Accept", "text/javascript, text/json")
                        .post(encode({
                            "login": login,
                            "token": token,
                            "description": description
                        }));
                }
                response.object = { id: id };
            ]]></execute>
        </insert>
        <update itemPath="github.gist" produces="JSON">
            <inputs>
                <key id="id" type="xs:string" paramType="variable" required="true"/>
                <key id="user" type="xs:string" paramType="variable" required="true"/>
                <key id="token" type="xs:string" paramType="variable" required="true"/>
                <key id="name" type="xs:string" paramType="variable" required="false"/>
                <value id="content" type="xs:string" paramType="variable" required="false"/>
                <value id="description" type="xs:string" paramType="variable" required="false"/>
            </inputs>
            <execute><![CDATA[
                function encode(data) {
                    var message = "";
                    for (var key in data) {
                        message += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(data[key]);
                    }
                    return message.substring(1);
                }
                var data = {
                    login: user,
                    token: token,
                    _method: "put"
                }
                
                if (name && content) {
                    var names = name.split(seperator);
                    var contents = contents.split(seperator);
                    for (var i = 0, l = Math.min(names.length, contents.length, 10); i < l; i ++) {
                        var key = names[i];
                        data["file_name[" + key + "]"] = key;
                        data["file_ext[" + key + "]"] = key.substr(key.lastIndexOf("."));
                        if (!contents[i]) data["file_contents[" + key + "]"] = contents[i];
                    }
                    // getting editing session hash
                    var hash = y.rest("https://gist.github.com/gists/" + id + "/edit")
                        .header("Content-type","application/x-www-form-urlencoded")
                        .header("Accept", "text/javascript, text/json")
                        .get()
                        .response
                        .match(/<form[^>]*action="\/gists\/(\d*)"[^>]*method="post"/)[1];
                    // updating files
                    var html = y.rest("https://gist.github.com/gists/" + hash)
                        .header("Content-type","application/x-www-form-urlencoded")
                        .header("Accept", "text/javascript, text/json")
                        .post(encode(data));
                }
                
                if (description) {
                    var url = "https://gist.github.com/gists/" + id + "/update_description";
                    y.rest(url)
                        .header("Content-type","application/x-www-form-urlencoded")
                        .header("Accept", "text/javascript, text/json")
                        .post(encode({
                            "login": login,
                            "token": token,
                            "description": description
                        }));
                }
            ]]></execute>
        </update>
        <delete itemPath="github.gist" produces="JSON">
            <urls>
                <url>https://gist.github.com/delete/{id}</url>
            </urls>
            <inputs>
                <key id="id" type="xs:string" paramType="path" required="true"/>
                <key id="user" type="xs:string" paramType="variable" required="true"/>
                <key id="token" type="xs:string" paramType="variable" required="true"/>
            </inputs>
            <execute><![CDATA[
                function encode(data) {
                    var message = "";
                    for (var key in data) {
                        message += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(data[key]);
                    }
                    return message.substring(1);
                }
                var data = {
                    "login": user,
                    "token": token,
                    "_method": "delete"
                };
                request
                    .header("Content-type","application/x-www-form-urlencoded")
                    .header("Accept", "text/javascript, text/json")
                    .post(encode(data))
                    .response;
            ]]></execute>
        </delete>
    </bindings>
</table>
